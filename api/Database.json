{
  "users": [
    {
      "id": 1,
      "cohortID": 28,
      "firstName": "Bill",
      "lastName": "Gates",
      "status": true,
      "userName": "billyG@me.com",
      "password": "pass"
    },
    {
      "id": 2,
      "cohortID": 31,
      "firstName": "Albert",
      "lastName": "Einstein",
      "status": true,
      "userName": "einstein@me.com",
      "password": "pass"
    },
    {
      "id": 4,
      "cohortID": 30,
      "firstName": "Immanuel",
      "lastName": "Kant",
      "status": true,
      "userName": "kant@me.com",
      "password": "pass"
    },
    {
      "id": 5,
      "cohortID": 29,
      "firstName": "Moss",
      "lastName": "Mitchell",
      "status": true,
      "userName": "Moss@me.com",
      "password": "pass"
    },
    {
      "id": 6,
      "cohortID": 32,
      "firstName": "Frederich",
      "lastName": "Nietzche",
      "status": true,
      "userName": "nietzshe@me.com",
      "password": "pass"
    },
    {
      "firstName": "Lauren",
      "lastName": "Wheeler",
      "userName": "lauren@gmail.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 13
    },
    {
      "firstName": "Jim",
      "lastName": "Jones",
      "userName": "jim@jim.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 51
    },
    {
      "id": 3,
      "cohortID": 29,
      "firstName": "JD",
      "lastName": "Wheeler",
      "status": false,
      "userName": "jd@me.com",
      "password": "pass"
    },
    {
      "firstName": "John",
      "lastName": "Jones",
      "userName": "jim@jim.com",
      "password": "pass",
      "status": false,
      "cohortID": 30,
      "id": 17
    },
    {
      "firstName": "Mike",
      "lastName": "Jones",
      "userName": "mike@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 69
    },
    {
      "firstName": "Jill",
      "lastName": "Jones",
      "userName": "jill@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 19
    },
    {
      "firstName": "Tom",
      "lastName": "Jones",
      "userName": "tom@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 20
    },
    {
      "firstName": "Cindy",
      "lastName": "Jones",
      "userName": "cindy@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 21
    },
    {
      "firstName": "Natasha",
      "lastName": "Krakow",
      "userName": "natasha@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 22
    },
    {
      "firstName": "Fred",
      "lastName": "Mercury",
      "userName": "fred@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 23
    },
    {
      "firstName": "Toledo",
      "lastName": "Jones",
      "userName": "toldeo@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 25
    },
    {
      "firstName": "Matilda",
      "lastName": "Jones",
      "userName": "matilda@me.com",
      "password": "pass",
      "status": false,
      "cohortID": 28,
      "id": 33
    },
    {
      "firstName": "Test",
      "lastName": "test",
      "userName": "test@me.com",
      "password": "test",
      "status": false,
      "cohortID": 30,
      "id": 70
    }
  ],
  "agendas": [
    {
      "topic": "React: Getting Started with the Basics",
      "difficulty": "8",
      "exercise": "Right now the kennel location information is JSX inside the Kennel component The business wants to expand and open a new location. Your job is to make a new component named LocationList and put the names and addresses of each location in that component's JSX This is another example of Single Responsibility Principle. Since we have multiple locations now we should have a component whose sole responsibility is to render the location information.Create two locations (you can use separate section elements if you like): Nashville North with a fictitious address and Nashville South with a fictitious address.Then put the LocationList component in the JSX for Kennel.",
      "chapter": 20,
      "date": "02-23-2019",
      "announcements": " Front End Demo Day Coming for C29",
      "QR": [],
      "cohortID": 30,
      "id": 3
    },
    {
      "topic": "Typechecking and Making Properties Required",
      "difficulty": "7",
      "exercise": "Examine each of the components in your application, and use PropTypes to validate the type of each property that you are using in that component.",
      "chapter": 34,
      "date": "02-22-2019",
      "announcements": "Front End Demo Day Coming",
      "QR": [],
      "cohortID": 29,
      "id": 4,
      "userId": 5
    },
    {
      "topic": "Making Generic, Reusable Components",
      "difficulty": "7",
      "exercise": "Advanced Challenge: Reusable List Component. If you examine your three list components now, you will immediately notice that all three of them are nearly identical. This is another opportunity for you to write a general, reusable component named ResourceList.See if you can make a single component that replaces AnimalList, EmployeeList, and LocationList.",
      "chapter": 34,
      "date": "02-23-2019",
      "announcements": "Front End Demo Day Coming",
      "QR": [],
      "cohortID": 29,
      "id": 6,
      "userId": 5
    },
    {
      "topic": "React Component State and Props",
      "difficulty": "9",
      "exercise": "Practice Exercise - Displaying Animals Now that you are passing state from the Kennel to the EmployeeList and LocationList, you're going to list animals now.  Create a new array in state in the Kennel component named animals. It will look just like the locations and employees arrays in state. Make sure each animal has an id property. Create an AnimalList component for displaying animals. Update Kennel to pass its animals state to AnimalList and use the appropriate key on this.props to display all animal names.",
      "chapter": "21",
      "date": "2019-02-25",
      "announcements": "Prepare for next project.",
      "QR": [],
      "cohortID": 30,
      "currentCohortID": 29,
      "id": 7
    },
    {
      "topic": "Routing in React Applications",
      "difficulty": "8",
      "exercise": "Practice: Owners List If you haven't created the owners array in your state yet, please go ahead and create it now, and populate it with 4 owners. Each owners should have the id, phoneNumber, and name properties.  Create a link in your navigation bar that links to /owners path. Create a route for /owners that renders the <OwnerList> component and sends the corresponding state property. Add the code in <OwnerList> to display all the items in the array.",
      "chapter": "23",
      "date": "2019-02-26",
      "announcements": "Nothing to see here move along.",
      "QR": [],
      "cohortID": 30,
      "currentCohortID": 30,
      "id": 8
    },
    {
      "topic": "React Context API for Managing Properties",
      "difficulty": "8",
      "exercise": "To avoid passing properties down through child components that aren't using them, other than to pass them down yet again to other child components, you can use the Context API in React to have a component whose sole purpose is to store the data for your application, and then any component can be written to subscribe to the data store.",
      "chapter": "29",
      "date": "2019-02-26",
      "announcements": "Resume and one sheet due soon.",
      "QR": [],
      "cohortID": 29,
      "currentCohortID": 28,
      "id": 9
    },
    {
      "topic": "Command Line Interface - The Terminal",
      "difficulty": "5",
      "exercise": "Practice Create the following directory structure in your workspace directory. workspace +-- cli     +-- practice         +-- create cd to the create directory with one command cd ~/workspace/cli/practice/create. Remember to use tab completion. While in this directory, create a new file named foo in the cli directory. Do not cd to cli, but rather use your navigation abilities. touch ../../foo Put some simple content in the file using the echo command. echo 'Foo, I am your father' > ../../foo Now use the cat command to read those contents. cat ../../foo Do not change directories, and create a file named bar in the practice directory. Remove the foo file you created earlier with the rm command. cd back up to the cli directory. Remove the practice directory and all of its contents.",
      "chapter": "3",
      "date": "2019-02-24",
      "announcements": "Stay tuned.",
      "QR": [],
      "cohortID": 31,
      "currentCohortID": 31,
      "id": 10
    },
    {
      "topic": "Styling with CSS Selectors",
      "difficulty": "2",
      "exercise": "Practice These commands are a helpful quick start. You may choose to ignore them completely and create your own directory structure. If you choose to use this recommendation, just copy the commands below. It doesn't matter what directory you are currently in.  mkdir -p ~/workspace/css/exercises/css-selectors && cd $_ touch index.html touch selectors.css Paste the code below into your HTML document.  The header element should have a 1px, goldenrod border. Convert the ul in the navigation element into a series of horizontal links with # as the href value, without bullets, and have some space between them horizontally. Ensure that the navigation is semantically marked as such (i.e. wrap it in the correct HTML tag). Any text in an element with class \"disabled\" should be colored grey, unless it is an attribute of an anchor tag. If it is an attribute of an anchor tag, it should be colored purple. Any text inside an element with a class of \"active\" should be colored yellow. Section elements should be contained within an article element. There are two missing closing tags in this document. Make sure you add them back in. Make the \"I'm red\" text colored red. Make the \"I'm blue\" text colored blue. The sibling h4 of the red element should have a background color of red. The sibling h4 of the blue element should have background color of blue. Any h4 that is a direct child of grandparent should have a 1px border with rounded corners. Elements with a class of promo should have bold text that is also colored gold. Without adding any other attributes to the input fields in the footer, write a CSS selector that makes any text input field have a height of 25px.",
      "chapter": "4",
      "date": "2019-02-25",
      "announcements": "Demo day coming.",
      "QR": [],
      "cohortID": 31,
      "currentCohortID": 31,
      "id": 11
    },
    {
      "topic": "NOT HERE YET!",
      "difficulty": "2",
      "exercise": "Coming Soon",
      "chapter": "4",
      "date": "2019-02-26",
      "announcements": "NADA",
      "QR": [],
      "cohortID": 32,
      "currentCohortID": 32,
      "id": 12
    },
    {
      "topic": "C# Magic",
      "difficulty": "10",
      "exercise": "Working on Group Project.",
      "chapter": "30",
      "date": "2019-02-26",
      "announcements": "Front End capstone for 29.",
      "QR": [],
      "cohortID": 28,
      "currentCohortID": 28,
      "id": 13
    }
  ],
  "links": [
    {
      "id": 1,
      "dateAdded": "02-01-2019",
      "title": "MDN",
      "description": "MDN Web Docs (previously know as MDN — the Mozilla Developer Network) is an evolving learning platform for Web technologies and the software that powers the Web, including:",
      "url": "www.MDN.com",
      "userID": 4
    },
    {
      "id": 2,
      "dateAdded": "02-10-2019",
      "title": "GitHub",
      "description": "We’re supporting a community where more than 31 million* people learn, share, and work together to build software.",
      "url": "www.github.com",
      "userID": 4
    },
    {
      "id": 3,
      "dateAdded": "02-08-2019",
      "title": "W3 Schools.com",
      "description": "W3Schools is a web developers site, with tutorials and references on web development languages such as HTML, CSS, JavaScript, PHP, SQL, Python, jQuery, W3.CSS, and Bootstrap, covering most aspects of web programming.",
      "url": "www.w3schools.com",
      "userID": 4
    },
    {
      "id": 4,
      "dateAdded": "01-08-2019",
      "title": "jQuery",
      "description": "A one stop shop for all things jQuery.",
      "url": "www.jquery.com/",
      "userID": 4
    },
    {
      "id": 5,
      "dateAdded": "02-01-2019",
      "title": "CSS-Tricks",
      "description": "These days CSS-Tricks is really about building websites and all that entails, mostly from a front-end perspective. We have staff writers (see below) and loads of guest authors, so the content you find here will be as diverse as they are.",
      "url": "https://css-tricks.com/",
      "userID": 5
    },
    {
      "id": 6,
      "dateAdded": "02-09-2019",
      "title": "React Cheat Sheet",
      "description": "React Cheat Sheet is just what it says a great index for all things React. There is alos additional training.",
      "url": "https://reactcheatsheet.com/",
      "userID": 5
    },
    {
      "id": 7,
      "dateAdded": "02-02-2019",
      "title": "HTML/CSS/JS Cheat Sheet",
      "description": "These pages were created as a quick guide for those who already know how to work with these languages. ",
      "url": "https://htmlcheatsheet.com",
      "userID": 5
    },
    {
      "id": 8,
      "dateAdded": "02-19-2019",
      "title": "Team Treehouse",
      "description": "Treehouse brings affordable technology education to people everywhere in order to help them achieve their dreams and change the world.",
      "url": "https://teamtreehouse.com",
      "userID": 5
    }
  ],
  "cohorts": [
    {
      "id": 1,
      "cohortID": 28,
      "description": "Full Stack with Front End JS React and BackEnd with Python",
      "userID": 1,
      "start": "09-01-2018",
      "graduate": "03-22-2019"
    },
    {
      "id": 2,
      "cohortID": 29,
      "description": "Full Stack with Front End JS React and BackEnd with C#",
      "userID": 2,
      "start": "10-29-2018",
      "graduate": "05-22-2019"
    },
    {
      "id": 3,
      "cohortID": 30,
      "description": "Full Stack with Front End JS React and BackEnd with C#",
      "userID": 3,
      "start": "09-01-2018",
      "graduate": "03-22-2019"
    },
    {
      "id": 4,
      "cohortID": 31,
      "description": "Full Stack with Front End JS React and BackEnd with C#",
      "userID": 4,
      "start": "09-01-2018",
      "graduate": "03-22-2019"
    },
    {
      "id": 5,
      "cohortID": 32,
      "description": "Full Stack with Front End JS React",
      "userID": 5,
      "start": "09-01-2018",
      "graduate": "03-22-2019"
    }
  ],
  "tempChecks": [
    {
      "time": "4:05 PM",
      "date": "2/20/2019",
      "feels": 10,
      "userID": 3,
      "cohortID": 29,
      "id": 11
    },
    {
      "time": "4:07 PM",
      "date": "2/21/2019",
      "feels": 5,
      "userID": 3,
      "cohortID": 29,
      "id": 12
    },
    {
      "time": "9:13 AM",
      "date": "2/22/2019",
      "feels": 9,
      "userID": 3,
      "cohortID": 29,
      "id": 13
    },
    {
      "time": "1:46 PM",
      "date": "2/23/2019",
      "feels": 8,
      "userID": 3,
      "cohortID": 29,
      "id": 14
    },
    {
      "time": "1:49 PM",
      "date": "2/24/2019",
      "feels": 6,
      "userID": 3,
      "cohortID": 29,
      "id": 15
    },
    {
      "time": "1:49 PM",
      "date": "2/20/2019",
      "feels": 5,
      "userID": 51,
      "cohortID": 30,
      "id": 16
    },
    {
      "time": "1:49 PM",
      "date": "2/21/2019",
      "feels": 8,
      "userID": 51,
      "cohortID": 30,
      "id": 17
    },
    {
      "time": "1:49 PM",
      "date": "2/22/2019",
      "feels": 10,
      "userID": 51,
      "cohortID": 30,
      "id": 18
    },
    {
      "time": "10:01 AM",
      "date": "2/23/2019",
      "feels": 8,
      "userID": 51,
      "cohortID": 30,
      "id": 19
    },
    {
      "time": "11:08 PM",
      "date": "2/24/2019",
      "feels": 7,
      "userID": 51,
      "cohortID": 30,
      "id": 20
    },
    {
      "time": "11:52:33 PM",
      "date": "2/24/2019",
      "feels": 9,
      "userID": 27,
      "cohortID": 29,
      "id": 21
    },
    {
      "time": "9:29:39 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 33,
      "cohortID": 29,
      "id": 22
    },
    {
      "time": "10:54:42 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 33,
      "cohortID": 29,
      "id": 23
    },
    {
      "time": "12:53:07 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 33,
      "cohortID": 29,
      "id": 24
    },
    {
      "time": "5:32:47 PM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 33,
      "cohortID": 29,
      "id": 25
    },
    {
      "time": "5:38:56 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 33,
      "cohortID": 29,
      "id": 26
    },
    {
      "time": "5:40:30 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 33,
      "cohortID": 29,
      "id": 27
    },
    {
      "time": "5:41:17 PM",
      "date": "2/25/2019",
      "feels": 9,
      "userID": 33,
      "cohortID": 29,
      "id": 28
    },
    {
      "time": "11:52:33 PM",
      "date": "2/24/2019",
      "feels": 9,
      "userID": 69,
      "cohortID": 30,
      "id": 29
    },
    {
      "time": "9:29:39 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 69,
      "cohortID": 30,
      "id": 30
    },
    {
      "time": "10:54:42 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 69,
      "cohortID": 30,
      "id": 31
    },
    {
      "time": "12:53:07 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 69,
      "cohortID": 30,
      "id": 32
    },
    {
      "time": "5:32:47 PM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 69,
      "cohortID": 30,
      "id": 33
    },
    {
      "time": "5:38:56 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 69,
      "cohortID": 30,
      "id": 34
    },
    {
      "time": "5:40:30 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 69,
      "cohortID": 30,
      "id": 35
    },
    {
      "time": "5:41:17 PM",
      "date": "2/25/2019",
      "feels": 9,
      "userID": 69,
      "cohortID": 30,
      "id": 36
    },
    {
      "time": "12:53:07 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 25,
      "cohortID": 28,
      "id": 37
    },
    {
      "time": "5:32:47 PM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 25,
      "cohortID": 28,
      "id": 38
    },
    {
      "time": "5:38:56 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 25,
      "cohortID": 28,
      "id": 39
    },
    {
      "time": "5:40:30 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 25,
      "cohortID": 28,
      "id": 40
    },
    {
      "time": "5:41:17 PM",
      "date": "2/25/2019",
      "feels": 9,
      "userID": 25,
      "cohortID": 28,
      "id": 41
    },
    {
      "time": "11:52:33 PM",
      "date": "2/24/2019",
      "feels": 9,
      "userID": 25,
      "cohortID": 28,
      "id": 42
    },
    {
      "time": "9:29:39 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 25,
      "cohortID": 28,
      "id": 43
    },
    {
      "time": "10:54:42 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 25,
      "cohortID": 28,
      "id": 44
    },
    {
      "time": "12:53:07 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 25,
      "cohortID": 28,
      "id": 45
    },
    {
      "time": "5:32:47 PM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 25,
      "cohortID": 28,
      "id": 46
    },
    {
      "time": "5:38:56 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 25,
      "cohortID": 28,
      "id": 47
    },
    {
      "time": "5:40:30 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 25,
      "cohortID": 28,
      "id": 48
    },
    {
      "time": "5:41:17 PM",
      "date": "2/25/2019",
      "feels": 9,
      "userID": 25,
      "cohortID": 28,
      "id": 49
    },
    {
      "time": "11:52:33 PM",
      "date": "2/24/2019",
      "feels": 5,
      "userID": 20,
      "cohortID": 31,
      "id": 50
    },
    {
      "time": "9:29:39 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 20,
      "cohortID": 31,
      "id": 51
    },
    {
      "time": "10:54:42 AM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 20,
      "cohortID": 31,
      "id": 52
    },
    {
      "time": "12:53:07 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 20,
      "cohortID": 31,
      "id": 53
    },
    {
      "time": "5:32:47 PM",
      "date": "2/25/2019",
      "feels": 8,
      "userID": 20,
      "cohortID": 31,
      "id": 54
    },
    {
      "time": "5:38:56 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 20,
      "cohortID": 31,
      "id": 55
    },
    {
      "time": "5:40:30 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 20,
      "cohortID": 31,
      "id": 56
    },
    {
      "time": "5:41:17 PM",
      "date": "2/25/2019",
      "feels": 9,
      "userID": 20,
      "cohortID": 31,
      "id": 57
    },
    {
      "time": "12:53:07 PM",
      "date": "2/25/2019",
      "feels": 10,
      "userID": 20,
      "cohortID": 31,
      "id": 58
    },
    {
      "time": "5:32:47 PM",
      "date": "2/20/2019",
      "feels": 8,
      "userID": 20,
      "cohortID": 31,
      "id": 59
    },
    {
      "time": "5:38:56 PM",
      "date": "2/20/2019",
      "feels": 10,
      "userID": 20,
      "cohortID": 31,
      "id": 60
    },
    {
      "time": "5:40:30 PM",
      "date": "2/20/2019",
      "feels": 10,
      "userID": 20,
      "cohortID": 31,
      "id": 61
    },
    {
      "time": "8:51:39 AM",
      "date": "2/26/2019",
      "feels": 7,
      "userID": 3,
      "cohortID": 29,
      "id": 62
    },
    {
      "time": "9:28:08 AM",
      "date": "2/26/2019",
      "feels": 4,
      "userID": 3,
      "cohortID": 29,
      "id": 63
    },
    {
      "time": "11:40:51 AM",
      "date": "2/27/2019",
      "feels": 10,
      "userID": 3,
      "cohortID": 29,
      "id": 64
    },
    {
      "time": "2:25:59 PM",
      "date": "3/5/2019",
      "feels": 10,
      "userID": 3,
      "cohortID": 29,
      "id": 65
    },
    {
      "time": "4:25:38 PM",
      "date": "3/5/2019",
      "feels": 10,
      "userID": 3,
      "cohortID": 29,
      "id": 66
    }
  ],
  "attendance": [
    {
      "time": "9:07 AM",
      "date": "2/20/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 12
    },
    {
      "time": "10:40 AM",
      "date": "2/21/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 13
    },
    {
      "time": "10:45 AM",
      "date": "2/22/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 20
    },
    {
      "time": "9:47 AM",
      "date": "2/23/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 37
    },
    {
      "time": "8:10 AM",
      "date": "2/24/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 38
    },
    {
      "time": "8:13 AM",
      "date": "2/20/2019",
      "userID": 51,
      "cohortID": 30,
      "id": 39
    },
    {
      "time": "3:20 PM",
      "date": "2/21/2019",
      "userID": 51,
      "cohortID": 30,
      "id": 40
    },
    {
      "time": "9:46 PM",
      "date": "2/22/2019",
      "userID": 51,
      "cohortID": 30,
      "id": 41
    },
    {
      "time": "11:07 PM",
      "date": "2/23/2019",
      "userID": 51,
      "cohortID": 30,
      "id": 42
    },
    {
      "time": "11:08 PM",
      "date": "2/24/2019",
      "userID": 51,
      "cohortID": 30,
      "id": 43
    },
    {
      "time": "11:58 PM",
      "date": "2/24/2019",
      "userID": 69,
      "cohortID": 29,
      "id": 49
    },
    {
      "time": "9:29 AM",
      "date": "2/25/2019",
      "userID": 69,
      "cohortID": 29,
      "id": 50
    },
    {
      "time": "10:54 AM",
      "date": "2/25/2019",
      "userID": 69,
      "cohortID": 29,
      "id": 51
    },
    {
      "time": "12:52 PM",
      "date": "2/25/2019",
      "userID": 69,
      "cohortID": 29,
      "id": 52
    },
    {
      "time": "5:32 PM",
      "date": "2/25/2019",
      "userID": 69,
      "cohortID": 29,
      "id": 53
    },
    {
      "time": "5:38 PM",
      "date": "2/25/2019",
      "userID": 69,
      "cohortID": 29,
      "id": 54
    },
    {
      "time": "5:40 PM",
      "date": "2/25/2019",
      "userID": 69,
      "cohortID": 29,
      "id": 55
    },
    {
      "time": "11:58 PM",
      "date": "2/24/2019",
      "userID": 19,
      "cohortID": 28,
      "id": 56
    },
    {
      "time": "9:28 AM",
      "date": "2/25/2019",
      "userID": 19,
      "cohortID": 28,
      "id": 57
    },
    {
      "time": "10:54 AM",
      "date": "2/25/2019",
      "userID": 19,
      "cohortID": 28,
      "id": 58
    },
    {
      "time": "12:52 PM",
      "date": "2/25/2019",
      "userID": 19,
      "cohortID": 28,
      "id": 59
    },
    {
      "time": "5:32 PM",
      "date": "2/25/2019",
      "userID": 19,
      "cohortID": 28,
      "id": 60
    },
    {
      "time": "5:38 PM",
      "date": "2/25/2019",
      "userID": 19,
      "cohortID": 28,
      "id": 61
    },
    {
      "time": "5:40 PM",
      "date": "2/25/2019",
      "userID": 19,
      "cohortID": 28,
      "id": 62
    },
    {
      "time": "12:52 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 63
    },
    {
      "time": "5:32 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 64
    },
    {
      "time": "5:38 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 65
    },
    {
      "time": "5:40 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 66
    },
    {
      "time": "11:58 PM",
      "date": "2/24/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 67
    },
    {
      "time": "9:29 AM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 68
    },
    {
      "time": "10:54 AM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 69
    },
    {
      "time": "12:52 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 70
    },
    {
      "time": "5:32 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 71
    },
    {
      "time": "5:38 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 72
    },
    {
      "time": "5:40 PM",
      "date": "2/25/2019",
      "userID": 21,
      "cohortID": 29,
      "id": 73
    },
    {
      "time": "8:51 AM",
      "date": "2/26/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 74
    },
    {
      "time": "9:27 AM",
      "date": "2/26/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 75
    },
    {
      "time": "11:40 AM",
      "date": "2/27/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 76
    },
    {
      "time": "2:25 PM",
      "date": "3/5/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 77
    },
    {
      "time": "4:25 PM",
      "date": "3/5/2019",
      "userID": 3,
      "cohortID": 29,
      "id": 78
    }
  ]
}